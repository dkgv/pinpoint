name: Publish Release

on:
  push:
    tags:
      - "*"

jobs:
  create_release:
    name: Create new release
    runs-on: windows-latest
    
    steps:
      - name: Install 7Zip PowerShell module
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force
      
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - uses: actions/checkout@v2
      
      - name: Extract tag version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash
      
      - name: Restore packages
        run: dotnet restore
      
      - name: Build artifacts
        run: |
          dotnet publish -c Release Pinpoint.Win/Pinpoint.Win.csproj -o ./a -r win-x64 --self-contained false -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
          dotnet publish -c Release Pinpoint.Win/Pinpoint.Win.csproj -o ./b -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true
      
      - name: Zip artifacts
        run: |
          7z a -tzip Pinpoint-${{ steps.get_version.outputs.VERSION }}.zip ./a/Pinpoint.exe
          7z a -tzip Pinpoint-Standalone-${{ steps.get_version.outputs.VERSION }}.zip ./b/Pinpoint.exe

      - name: Create GitHub release
        if: ${{ !env.ACT }}
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: true
      
      - name: Upload binary for checksum verification
        if: ${{ !env.ACT }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./a/Pinpoint.exe
          asset_name: Pinpoint-${{ steps.get_version.outputs.VERSION }}.exe
          asset_content_type: application/octet-stream
      
      - name: Upload release asset (zip of self-contained)
        if: ${{ !env.ACT }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Pinpoint-Standalone-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: Pinpoint-Standalone-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
      
      - name: Upload release asset (zip of not self-contained)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Pinpoint-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: Pinpoint-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

      - name: Prepare Chocolatey
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: apikey --key ${{ secrets.CHOCOLATEY_API_KEY }} --source https://push.chocolatey.org/

      - name: Overwrite version in Nuspec
        shell: bash
        run: |
          sed -i "s/<version>.*<\/version>/<version>${{ steps.get_version.outputs.VERSION }}<\/version>/g" Pinpoint.nuspec
          sed -i "s/<packageSourceUrl>.*<\/packageSourceUrl>/<packageSourceUrl>https:\/\/github.com\/dkgv\/pinpoint\/releases\/tag\/${{ steps.get_version.outputs.VERSION }}<\/packageSourceUrl>/g" Pinpoint.nuspec

      - name: Create VERIFICATION file
        run: |
          echo "In order to verify checksum contents please navigate to https://github.com/dkgv/pinpoint/releases/tag/${{ steps.get_version.outputs.VERSION }} and compare against the official Pinpoint-${{ steps.get_version.outputs.VERSION }}.exe file." > VERIFICATION.txt

      - name: Rename LICENSE to LICENSE.txt
        run: mv LICENSE LICENSE.txt

      - name: Create Chocolatey package
        run: |
          choco pack
    
      - name: Upload Chocolatey package to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Pinpoint.${{ steps.get_version.outputs.VERSION }}.nupkg
          asset_name: Chocolatey.${{ steps.get_version.outputs.VERSION }}.nupkg
          asset_content_type: application/zip
      
      - name: Publish Chocolatey package
        run: |
          choco push Pinpoint.${{ steps.get_version.outputs.VERSION }}.nupkg --source https://push.chocolatey.org/
